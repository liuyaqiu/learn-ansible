---
# ============================================================================
# Configuration Validation Playbook
# ============================================================================
# This playbook validates the configuration before VM operations
# 
# Usage:
#   ansible-playbook -i inventories/dev playbooks/validate-config.yml
# ============================================================================

- name: Validate VM Configuration
  hosts: localhost
  connection: local
  gather_facts: yes

  pre_tasks:
    - name: Display validation context
      debug:
        msg: |
          🔍 Configuration Validation Starting
          📋 Environment: {{ group_names | default(['default']) | join(', ') }}
          🎯 Inventory: {{ inventory_file | default('default') }}

  tasks:
    - name: Display current configuration summary
      debug:
        msg: |
          🔍 Configuration Summary
          ========================
          
          📋 Environment: {{ group_names | default(['default']) | join(', ') }}
          🖥️  VM Name: {{ vm_name }}
          💾 Memory: {{ vm_memory }} MB
          🔧 vCPUs: {{ vm_vcpus }}
          💽 Disk Size: {{ vm_disk_size }} GB
          🌐 Static IP: {{ vm_static_ip }}
          🔑 SSH Key: {{ ssh_key_path }}
          👤 User: {{ cloud_init_user }}
          📦 Packages: {{ vm_packages | length }} packages
          
          📁 File Paths (computed):
          - VM Disk: {{ image_dir }}/{{ vm_name }}.qcow2
          - Cloud Image: {{ image_dir }}/{{ cloud_img_base_name }}
          - Seed Image: {{ image_dir }}/{{ vm_name }}-seed.img

    - name: Include role validation
      include_role:
        name: kvm-vm
        tasks_from: validate.yml
      vars:
        kvm_vm_name: "{{ vm_name }}"
        kvm_vm_memory: "{{ vm_memory }}"
        kvm_vm_vcpus: "{{ vm_vcpus }}"
        kvm_vm_disk_size: "{{ vm_disk_size }}"
        kvm_vm_static_ip: "{{ vm_static_ip }}"
        kvm_ssh_key_path: "{{ ssh_key_path }}"
        kvm_ssh_private_key_path: "{{ ssh_private_key_path }}"
        kvm_cloud_init_user: "{{ cloud_init_user }}"

    - name: Check for potential IP conflicts
      shell: |
        if ping -c 1 -W 1 {{ vm_static_ip }} >/dev/null 2>&1; then
          echo "IP_IN_USE"
        else
          echo "IP_AVAILABLE"
        fi
      register: ip_check
      changed_when: false
      failed_when: false

    - name: Report IP availability
      debug:
        msg: |
          {% if ip_check.stdout == "IP_IN_USE" %}
          ⚠️  WARNING: IP {{ vm_static_ip }} appears to be in use
          {% else %}
          ✅ IP {{ vm_static_ip }} appears to be available
          {% endif %}

    - name: Validate image directory permissions
      stat:
        path: "{{ image_dir }}"
      register: image_dir_stat

    - name: Check image directory accessibility
      assert:
        that:
          - image_dir_stat.stat.exists
          - image_dir_stat.stat.isdir
        fail_msg: "❌ Image directory is not accessible: {{ image_dir }}"
        success_msg: "✅ Image directory is accessible"

  post_tasks:
    - name: Display validation results
      debug:
        msg: |
          ✅ Configuration Validation Complete!
          
          📊 Summary:
          - All required variables: ✅ Valid
          - Resource constraints: ✅ Within limits  
          - IP address format: ✅ Valid
          - SSH key: ✅ Accessible
          - Package list: ✅ Configured
          - Image directory: ✅ Accessible
          
          🚀 Configuration is ready for deployment!
          
          💡 Next Steps:
          - Run: ansible-playbook -i inventories/{{ group_names[0] | default('dev') }} playbooks/site.yml
          - Or create VM: ansible-playbook -i inventories/{{ group_names[0] | default('dev') }} playbooks/vm-create.yml
